// Code generated by goa v3.20.0, DO NOT EDIT.
//
// svc-media client
//
// Command:
// $ goa gen github.com/adrisongomez/pti-ecommerce-site/backends/design -o
// ./internal

package svcmedia

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "svc-media" service client.
type Client struct {
	ListEndpoint       goa.Endpoint
	GetByIDEndpoint    goa.Endpoint
	CreateEndpoint     goa.Endpoint
	DeleteByIDEndpoint goa.Endpoint
}

// NewClient initializes a "svc-media" service client given the endpoints.
func NewClient(list, getByID, create, deleteByID goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:       list,
		GetByIDEndpoint:    getByID,
		CreateEndpoint:     create,
		DeleteByIDEndpoint: deleteByID,
	}
}

// List calls the "list" endpoint of the "svc-media" service.
// List may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) List(ctx context.Context, p *ListPayload) (res *MediaList, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MediaList), nil
}

// GetByID calls the "getById" endpoint of the "svc-media" service.
// GetByID may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) GetByID(ctx context.Context, p *GetByIDPayload) (res *Media, err error) {
	var ires any
	ires, err = c.GetByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Media), nil
}

// Create calls the "create" endpoint of the "svc-media" service.
// Create may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *MediaInput) (res *Media, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Media), nil
}

// DeleteByID calls the "deleteById" endpoint of the "svc-media" service.
// DeleteByID may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) DeleteByID(ctx context.Context, p *DeleteByIDPayload) (res bool, err error) {
	var ires any
	ires, err = c.DeleteByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(bool), nil
}
