// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from "@hey-api/client-axios";
import type {
  SvcHealthcheckCheckData,
  SvcHealthcheckCheckResponse,
  SvcMediaListData,
  SvcMediaListResponse,
  SvcMediaListError,
  SvcMediaCreateData,
  SvcMediaCreateResponse,
  SvcMediaCreateError,
  SvcMediaDeleteByIdData,
  SvcMediaDeleteByIdResponse,
  SvcMediaDeleteByIdError,
  SvcMediaGetByIdData,
  SvcMediaGetByIdResponse,
  SvcMediaGetByIdError,
  OpenapiApiOpenapiJsonData,
  SvcProductsListProductData,
  SvcProductsListProductResponse,
  SvcProductsListProductError,
  SvcProductsCreateProductData,
  SvcProductsCreateProductResponse,
  SvcProductsCreateProductError,
  SvcProductsDeleteProductByIdData,
  SvcProductsDeleteProductByIdResponse,
  SvcProductsDeleteProductByIdError,
  SvcProductsGetProductByIdData,
  SvcProductsGetProductByIdResponse,
  SvcProductsGetProductByIdError,
  SvcProductsUpdateProductByIdData,
  SvcProductsUpdateProductByIdResponse,
  SvcProductsAddMediaData,
  SvcProductsAddMediaResponse,
  SvcProductsAddMediaError,
  SvcProductsRemoveMediaData,
  SvcProductsRemoveMediaResponse,
  SvcProductsRemoveMediaError,
  SvcProductsAddVariantData,
  SvcProductsAddVariantResponse,
  SvcProductsAddVariantError,
  SvcProductsRemoveVariantData,
  SvcProductsRemoveVariantResponse,
  SvcProductsRemoveVariantError,
  SvcVendorListData,
  SvcVendorListResponse,
  SvcVendorListError,
  SvcVendorCreateData,
  SvcVendorCreateResponse,
  SvcVendorCreateError,
  SvcVendorDeleteByIdData,
  SvcVendorDeleteByIdResponse,
  SvcVendorDeleteByIdError,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * check svc-healthcheck
 */
export const svcHealthcheckCheck = <ThrowOnError extends boolean = false>(
  options?: Options<SvcHealthcheckCheckData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    SvcHealthcheckCheckResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/healthcheck",
    ...options,
  });
};

/**
 * list svc-media
 * Create a media record
 */
export const svcMediaList = <ThrowOnError extends boolean = false>(
  options?: Options<SvcMediaListData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    SvcMediaListResponse,
    SvcMediaListError,
    ThrowOnError
  >({
    url: "/api/medias",
    ...options,
  });
};

/**
 * create svc-media
 * Create a media record
 */
export const svcMediaCreate = <ThrowOnError extends boolean = false>(
  options: Options<SvcMediaCreateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SvcMediaCreateResponse,
    SvcMediaCreateError,
    ThrowOnError
  >({
    url: "/api/medias",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * deleteById svc-media
 * Create a media record
 */
export const svcMediaDeleteById = <ThrowOnError extends boolean = false>(
  options: Options<SvcMediaDeleteByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    SvcMediaDeleteByIdResponse,
    SvcMediaDeleteByIdError,
    ThrowOnError
  >({
    url: "/api/medias/{mediaId}",
    ...options,
  });
};

/**
 * getById svc-media
 * Get a media by id
 */
export const svcMediaGetById = <ThrowOnError extends boolean = false>(
  options: Options<SvcMediaGetByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    SvcMediaGetByIdResponse,
    SvcMediaGetByIdError,
    ThrowOnError
  >({
    url: "/api/medias/{mediaId}",
    ...options,
  });
};

/**
 * Download internal/gen/http/openapi.json
 */
export const openapiApiOpenapiJson = <ThrowOnError extends boolean = false>(
  options?: Options<OpenapiApiOpenapiJsonData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>(
    {
      url: "/api/openapi.json",
      ...options,
    },
  );
};

/**
 * listProduct svc-products
 * List products
 */
export const svcProductsListProduct = <ThrowOnError extends boolean = false>(
  options?: Options<SvcProductsListProductData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    SvcProductsListProductResponse,
    SvcProductsListProductError,
    ThrowOnError
  >({
    url: "/api/products",
    ...options,
  });
};

/**
 * createProduct svc-products
 * Create a new product
 */
export const svcProductsCreateProduct = <ThrowOnError extends boolean = false>(
  options: Options<SvcProductsCreateProductData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SvcProductsCreateProductResponse,
    SvcProductsCreateProductError,
    ThrowOnError
  >({
    url: "/api/products",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * deleteProductById svc-products
 * Create a new product
 */
export const svcProductsDeleteProductById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<SvcProductsDeleteProductByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    SvcProductsDeleteProductByIdResponse,
    SvcProductsDeleteProductByIdError,
    ThrowOnError
  >({
    url: "/api/products/{productId}",
    ...options,
  });
};

/**
 * getProductById svc-products
 * Get a product by its id
 */
export const svcProductsGetProductById = <ThrowOnError extends boolean = false>(
  options: Options<SvcProductsGetProductByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    SvcProductsGetProductByIdResponse,
    SvcProductsGetProductByIdError,
    ThrowOnError
  >({
    url: "/api/products/{productId}",
    ...options,
  });
};

/**
 * updateProductById svc-products
 * Update a product by id
 */
export const svcProductsUpdateProductById = <
  ThrowOnError extends boolean = false,
>(
  options: Options<SvcProductsUpdateProductByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    SvcProductsUpdateProductByIdResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/products/{productId}",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * addMedia svc-products
 * Add a new product media to a given product
 */
export const svcProductsAddMedia = <ThrowOnError extends boolean = false>(
  options: Options<SvcProductsAddMediaData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SvcProductsAddMediaResponse,
    SvcProductsAddMediaError,
    ThrowOnError
  >({
    url: "/api/products/{productId}/product-medias",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * removeMedia svc-products
 * Remove a product media from a given product
 */
export const svcProductsRemoveMedia = <ThrowOnError extends boolean = false>(
  options: Options<SvcProductsRemoveMediaData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SvcProductsRemoveMediaResponse,
    SvcProductsRemoveMediaError,
    ThrowOnError
  >({
    url: "/api/products/{productId}/product-medias/{productMediaId}",
    ...options,
  });
};

/**
 * addVariant svc-products
 * Add a new product variant to a given product
 */
export const svcProductsAddVariant = <ThrowOnError extends boolean = false>(
  options: Options<SvcProductsAddVariantData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SvcProductsAddVariantResponse,
    SvcProductsAddVariantError,
    ThrowOnError
  >({
    url: "/api/products/{productId}/variants",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * removeVariant svc-products
 * Remove a given product variant
 */
export const svcProductsRemoveVariant = <ThrowOnError extends boolean = false>(
  options: Options<SvcProductsRemoveVariantData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    SvcProductsRemoveVariantResponse,
    SvcProductsRemoveVariantError,
    ThrowOnError
  >({
    url: "/api/products/{productId}/variants/{variantId}",
    ...options,
  });
};

/**
 * list svc-vendor
 * List vendors
 */
export const svcVendorList = <ThrowOnError extends boolean = false>(
  options?: Options<SvcVendorListData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    SvcVendorListResponse,
    SvcVendorListError,
    ThrowOnError
  >({
    url: "/api/vendors",
    ...options,
  });
};

/**
 * create svc-vendor
 * Create a new vendor
 */
export const svcVendorCreate = <ThrowOnError extends boolean = false>(
  options: Options<SvcVendorCreateData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    SvcVendorCreateResponse,
    SvcVendorCreateError,
    ThrowOnError
  >({
    url: "/api/vendors",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * deleteById svc-vendor
 * Delete a vendor by id
 */
export const svcVendorDeleteById = <ThrowOnError extends boolean = false>(
  options: Options<SvcVendorDeleteByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    SvcVendorDeleteByIdResponse,
    SvcVendorDeleteByIdError,
    ThrowOnError
  >({
    url: "/api/vendors/{vendorId}",
    ...options,
  });
};
